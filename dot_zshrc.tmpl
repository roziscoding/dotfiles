export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
{{ if eq "darwin" .chezmoi.os }}
export PATH=/opt/homebrew/bin:$PATH
{{ end }}

export PATH="${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH"
eval "$(starship init zsh)"

# Fixing completions
setopt automenu nolistambiguous
zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt autocd beep extendedglob nomatch notify
# End of lines configured by zsh-newuser-install

bindkey  "^[[H"   beginning-of-line
bindkey  "^[[F"   end-of-line
bindkey  "^[[3~"  delete-char
bindkey -e

# install asdf completions
fpath=(${ASDF_DATA_DIR:-$HOME/.asdf}/completions $fpath)\

# initialise completions with ZSH's compinit
autoload -Uz compinit && compinit

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk

# Sets default editor to vim
export EDITOR=nvim

# Loads plugins
zinit wait lucid for \
  atinit'ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay' \
    zdharma-continuum/fast-syntax-highlighting \
  blockf \
    zsh-users/zsh-completions \
  atload'!_zsh_autosuggest_start' \
    zsh-users/zsh-autosuggestions \
  hlissner/zsh-autopair \
  zpm-zsh/colorize \
  Tarrasch/zsh-command-not-found \
  zpm-zsh/ls \
  atload'unalias gst; alias gst="git status"' davidde/git \
  atload'alias python=python3' amstrad/oh-my-matrix \
  reegnz/jq-zsh-plugin \
  atload'bindkey "^[[A" history-substring-search-up; bindkey "^[[B" history-substring-search-down;' zsh-users/zsh-history-substring-search \
  Tarrasch/zsh-colors \
  Aloxaf/fzf-tab

# Aliases
function cz () {
  code $(z -e $1)
}

function cfz () {
  code $(fzf)
}

function mkd () {
  mkdir -p $1 && cd $1
}

function ghc () {
  OWNER=$(basename $(pwd))
  gh repo clone $OWNER/$1
}

function secrets () {
  eval "$(op inject -i ~/.envs.sh)"
}

function wreboot () {
        sudo efibootmgr -n 0
        sudo reboot
}

function rd () {
    echo -n "Deleting $@. Continue? [y/n] "
    read REPLY
    case $REPLY in
      [Yy]) rm -rf $@ ;;
    esac
}

function yy () {
 local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" 
 yazi "$@" --cwd-file="$tmp"
 if cwd="$(cat -- "$tmp")"  && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]
 then
  cd -- "$cwd" || return
 fi
 rm -f -- "$tmp"
}


alias mongo="docker exec -it mongodb mongo"
alias cat="bat"
alias cm="chezmoi"
alias spt="spotify_player"
alias jqenv="jq -r '.[] | \"export \" + .key + \"=\\\"\" + .value + \"\\\"\"'"
alias nodeclear='find . -name "node_modules" -type d -prune -exec rm -rf "{}" +'

{{ if eq "darwin" .chezmoi.os }}
alias tar=$(which gtar)
{{ end }}

eval "$(zoxide init zsh)"
{{ if stat (joinPath .chezmoi.homeDir ".config/op/plugins.sh") -}}
  source "$HOME/.config/op/plugins.sh"
{{ end }}

export TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE=${HOME}/.colima/docker.sock
[[ $(uname -s) == "Darwin" ]] && export DOCKER_HOST="unix:///${HOME}/.colima/docker.sock"
export TESTCONTAINERS_RYUK_DISABLED=true

eval "$(direnv hook zsh)"

source <(fzf --zsh)

# pnpm
export PNPM_HOME="{{ .chezmoi.homeDir }}/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

export ELECTRON_OZONE_PLATFORM_HINT=auto
